A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
The MOST ideal way to comply with the requirements would be (C): Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:
The requirement is to record and store all new changes made to items in DynamoDB in another DynamoDB table in another region. EventBridge can help achieve this by triggering a Lambda function on every table-level event in the source table, such as an insert, update, or delete. The Lambda function can then process the new change and save it to the target table in the other region.
Option (A) DynamoDB Accelerator is not relevant to this scenario as it provides low-latency data access for specific use cases, but it does not provide the necessary event-driven functionality to track changes across multiple tables.
Option (B) Enable DynamoDB Point-in-Time Recovery is a backup and restore feature that can help recover data from a point in time, but it does not provide real-time change tracking or event-driven functionality.
Option (D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table is similar to option (C), but it requires more setup and maintenance as you need to enable DynamoDB Streams, set up a Lambda function as a stream processor, and configure the Lambda function to write to the target table. However, EventBridge provides an easier-to-use interface for setting up event-driven triggers.
In summary, the best solution is to use Amazon EventBridge to track changes in DynamoDB and trigger a Lambda function to save new changes to the other table in another region, providing a more efficient and scalable approach compared to other options.