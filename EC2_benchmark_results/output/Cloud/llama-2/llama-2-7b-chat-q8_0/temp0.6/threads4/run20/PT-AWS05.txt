A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
The MOST ideal way to comply with the requirements would be (C): Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:
Option (C) is the best solution because it provides a centralized, scalable, and reliable way to track and record changes made to items in DynamoDB. Using Amazon EventBridge, you can set up a rule that tracks table-level events in DynamoDB, such as insert, update, and delete operations. When these events occur, the rule will trigger a Lambda function as a target, which can then process and save the new changes to the other DynamoDB table in another region.
Option (A) is not ideal because DynamoDB Accelerator is a service that accelerates the performance of read-heavy workloads by caching frequently accessed data in a separate cache layer. While it may improve application performance, it does not provide the necessary functionality to track changes made to items in DynamoDB.
Option (B) is also not ideal because while DynamoDB Point-in-Time Recovery can automatically sync the two tables in case of a failure, it does not provide a way to track and record changes made to items in real-time.
Option (D) is also not ideal because while DynamoDB Streams can provide real-time updates on changes made to items in DynamoDB, it does not provide a way to process and save these changes to another table in another region.