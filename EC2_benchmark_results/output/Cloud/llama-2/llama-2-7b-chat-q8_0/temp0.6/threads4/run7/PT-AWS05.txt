A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
The MOST ideal way to comply with the requirements would be option (C): Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
EventBridge is a fully managed service that makes it easy to detect and respond to changes in AWS services, including DynamoDB. By creating an EventBridge rule that monitors DynamoDB table-level events, you can automatically trigger a Lambda function whenever there are new changes made to the items in the main DynamoDB table. The Lambda function can then process and save these new changes to another DynamoDB table in another region.
Option (A) is not ideal because it requires setting up an additional DynamoDB Accelerator instance, which can be expensive and complex to manage. Option (B) may also require additional configuration and setup to enable Point-in-Time Recovery, which might not be necessary if you are already using EventBridge to monitor changes in DynamoDB. Option (D) is also possible but might have performance implications since you would need to enable DynamoDB Streams for the entire table, which can generate a lot of data.