A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table is the most ideal way to comply with the requirements.
This approach will allow you to track all changes made to the items in the original DynamoDB table and automatically save them to another DynamoDB table in another region. EventBridge can trigger Lambda functions based on specific events such as INSERT, UPDATE, or DELETE actions, which makes it easy to implement this requirement.
Option (A) Set up DynamoDB Accelerator is not relevant to this scenario, as it is a performance optimization feature that does not provide the required functionality for change recording.
Option (B) Enable DynamoDB Point-in-Time Recovery is also not ideal for this scenario, as it is designed to restore data from a specific point in time, not to track changes made to items in a table.
Option (D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table can also work, but it may require more configuration and maintenance compared to using EventBridge.