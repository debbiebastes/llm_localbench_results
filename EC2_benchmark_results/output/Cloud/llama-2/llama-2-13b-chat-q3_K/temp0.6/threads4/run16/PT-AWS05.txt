A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 

Correct answer is C. Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:

The most ideal way to comply with the requirements is to create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. This will allow you to capture all new changes made to the items in DynamoDB and set a Lambda function as a rule target to process and save the new changes to the other table.

Option A, setting up DynamoDB Accelerator, is not necessary for this scenario as it only improves performance for certain workloads, and does not provide the functionality needed for compliance.

Option B, enabling DynamoDB Point-in-Time Recovery, would not be useful in this scenario as it provides the ability to restore a table to a specific point in time, but it does not provide real-time updates of changes made to the table.

Option D, enabling DynamoDB Streams, would also not be necessary for this scenario as it provides a stream of changes to a table, but it does not provide the ability to process and save new changes to another table.