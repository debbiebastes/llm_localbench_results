A cryptocurrency trading platform is using an API built in AWS Lambda and API Gateway. Due to the recent news and rumors about the upcoming price surge of Bitcoin, Ethereum and other cryptocurrencies, it is expected that the trading platform would have a significant increase in site visitors and new users in the coming days ahead.

In this scenario, how can you protect the backend systems of the platform from traffic spikes?

(A) Switch from using AWS Lambda and API Gateway to a more scalable and highly available architecture using EC2 instances, ELB, and Auto Scaling.
(B) Enable throttling limits and result caching in API Gateway.
(C) Use CloudFront in front of the API Gateway to act as a cache.
(D) Move the Lambda function in a VPC.

Answer: 
(B) Enable throttling limits and result caching in API Gateway.

Rationale:

Option A is not the best choice because EC2 instances, ELB, and Auto Scaling are not specifically designed to handle sudden traffic spikes. Instead, they can be more expensive and time-consuming to set up and configure.

Option C is not the best choice because CloudFront is a content delivery network (CDN) that is optimized for serving static assets, not handling large amounts of traffic or cache-related issues.

Option D does not address the issue of traffic spikes.

By enabling throttling limits and result caching in API Gateway, we can effectively handle sudden traffic spikes by controlling the number of requests that are allowed to reach the Lambda function. This will prevent the system from being overwhelmed and ensure that it remains responsive even under heavy loads. Additionally, result caching allows us to store the results of frequently requested API calls in memory, which can further reduce the load on the Lambda function and improve system performance.