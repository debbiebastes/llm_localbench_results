A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 

C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Rationale:

Option A is not ideal because setting up DynamoDB Accelerator would not help with recording and storing new changes in another region. Option B is also not ideal because Point-in-Time Recovery is meant for disaster recovery and not for recording and storing new changes.

Option C is the most ideal choice as it allows us to track table-level events in DynamoDB using Amazon EventBridge (Amazon CloudWatch Events) and set a Lambda function as a rule target to process and save new changes to the other table. This approach is more flexible and scalable than Option D, which requires the use of DynamoDB Streams, which can be more resource-intensive and harder to manage.