A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Rationale:
Option A is not applicable since DynamoDB Accelerator is not a solution for capturing changes made to items in DynamoDB. Option B is not ideal since it requires manual intervention to trigger point-in-time recovery, and it may not be feasible to do so for every change made to the table. Option D is not ideal since it requires more resources to set up and maintain compared to EventBridge.

EventBridge provides a scalable and cost-effective solution to track changes in DynamoDB without requiring manual intervention or additional infrastructure. By creating an EventBridge rule that tracks table-level events in DynamoDB, new changes can be captured and processed by the Lambda function set as a rule target. This approach also provides flexibility and control over the processing of changes based on specific conditions or criteria defined in the Lambda function.