A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 

C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Rationale:
Option A is not relevant since DynamoDB Accelerator only improves performance for certain types of queries, it does not enable recording of changes. Option B is not necessary as Point-in-Time Recovery is used to restore a database to a specific point in time, not to sync data between tables. Option D would require setting up and maintaining a separate streaming service to capture changes from DynamoDB, which is an additional overhead and complexity.

EventBridge (formerly known as CloudWatch Events) provides a centralized event processing service that can subscribe to events from multiple sources, including DynamoDB table-level events. By creating a rule in EventBridge, new changes made to the items in the DynamoDB table can be automatically detected and processed by the Lambda function set as a target. This approach is more ideal since it leverages existing services (DynamoDB and Lambda) without any additional overhead or complexity.