A tech company has a CRM application hosted on an Auto Scaling group of On-Demand EC2 instances with different instance types and sizes. The application is extensively used during office hours from 9 in the morning to 5 in the afternoon. Their users are complaining that the performance of the application is slow during the start of the day but then works normally after a couple of hours.

Which of the following is the MOST operationally efficient solution to implement to ensure the application works properly at the beginning of the day?

(A) Configure a Predictive scaling policy for the Auto Scaling group to automatically adjust the number of Amazon EC2 instances
(B) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the Memory utilization.
(C) Configure a Scheduled scaling policy for the Auto Scaling group to launch new instances before the start of the day.
(D) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the CPU utilization.

Answer: 

(A) Configure a Predictive scaling policy for the Auto Scaling group to automatically adjust the number of Amazon EC2 instances

Rationale:

The best approach to ensure that the application works properly at the beginning of the day is to use a predictive scaling policy. This will allow the Auto Scaling group to automatically adjust the number of instances based on historical usage patterns, ensuring that there are enough instances available to handle the increased traffic at the start of the day.

Option (A) is the most operationally efficient solution because it allows for a gradual increase in instances over time, rather than launching all new instances at once. This approach also reduces the risk of over-provisioning resources and minimizes the potential for performance issues.

Options (B), (C), and (D) do not address the specific needs of the scenario, as they focus on different scaling triggers and do not take into account the predictive nature of the problem.