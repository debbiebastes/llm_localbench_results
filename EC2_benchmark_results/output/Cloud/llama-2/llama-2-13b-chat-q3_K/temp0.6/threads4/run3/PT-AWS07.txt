A tech company has a CRM application hosted on an Auto Scaling group of On-Demand EC2 instances with different instance types and sizes. The application is extensively used during office hours from 9 in the morning to 5 in the afternoon. Their users are complaining that the performance of the application is slow during the start of the day but then works normally after a couple of hours.

Which of the following is the MOST operationally efficient solution to implement to ensure the application works properly at the beginning of the day?

(A) Configure a Predictive scaling policy for the Auto Scaling group to automatically adjust the number of Amazon EC2 instances
(B) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the Memory utilization.
(C) Configure a Scheduled scaling policy for the Auto Scaling group to launch new instances before the start of the day.
(D) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the CPU utilization.

Answer: 
B) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the Memory utilization.

Explanation: 

During peak usage times, memory utilization is typically higher than CPU utilization. Launching additional instances based on memory utilization will help ensure that the application has sufficient resources to handle the increased demand. Dynamic scaling based on memory utilization allows for a more precise response to changes in application usage patterns, which can improve performance and reduce costs by avoiding overprovisioning of EC2 instances.

While option (A) Predictive scaling might be effective in this situation, it requires historical data to make predictions, and the time it takes to gather and process that data could result in sluggish application performance at the start of the day.

Option (C) Scheduled scaling would launch new instances before the start of the day but may not be as efficient as dynamic scaling based on current demand.

Option (D) Dynamic scaling based on CPU utilization might not be effective since CPU utilization might be low during periods of high memory usage, and launching additional instances based on CPU utilization alone could result in overprovisioning.