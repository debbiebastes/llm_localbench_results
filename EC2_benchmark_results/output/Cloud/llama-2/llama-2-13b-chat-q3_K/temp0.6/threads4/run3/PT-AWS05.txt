A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 

C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Rationale: This option is the most ideal way to comply with the requirements because it allows for real-time tracking of changes made to items in DynamoDB, and automatically processes and saves those changes to the other table without the need for manual intervention or additional infrastructure setup. Additionally, using Amazon EventBridge (Amazon CloudWatch Events) rule allows for a centralized way to manage and monitor events across multiple AWS services, including DynamoDB.

Note: DynamoDB Accelerator and DynamoDB Point-in-Time Recovery are not required in this scenario as they are related to performance optimization and disaster recovery, respectively, and do not address the specific requirement of recording new changes made to items in DynamoDB.