A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 

Correct answer is (C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:
Option (A) is not ideal because it requires setting up an external accelerator, which is not necessary for this use case.

Option (B) is also not ideal because point-in-time recovery only works on a single table and would require additional setup and management.

Option (D) would require setting up DynamoDB Streams, which can be complex and would add unnecessary complexity to the solution.

Option (C) is the most efficient and cost-effective way to comply with the requirements. By creating an Amazon EventBridge rule that tracks table-level events in DynamoDB, you can easily capture new changes made to items in DynamoDB and process them in a Lambda function for storage in another table. This approach also allows for easy scalability and flexibility in case of any future changes or requirements.