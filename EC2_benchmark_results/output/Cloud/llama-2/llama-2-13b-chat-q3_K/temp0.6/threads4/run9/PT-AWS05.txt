A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
C. Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation: 

Option A is not a viable solution because there's no need for an accelerator here. Option B would require enabling point-in-time recovery, which can be expensive and complex to set up. Option D would also require setting up DynamoDB Streams, which may add additional cost and complexity.

Option C is the most ideal solution because it leverages Amazon EventBridge (formerly known as CloudWatch Events), which provides a centralized event handling service that can monitor events from multiple sources, including DynamoDB table-level events. By setting up an EventBridge rule to capture new changes in the primary DynamoDB table, and then invoking a Lambda function as the rule target to process and save those changes to the replica table in another region, we can achieve the desired compliance without incurring additional costs or complexity.