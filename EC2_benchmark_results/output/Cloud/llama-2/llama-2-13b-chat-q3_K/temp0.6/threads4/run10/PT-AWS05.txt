A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 

C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:

Option A, DynamoDB Accelerator, is not suitable for this scenario because it's designed for use with large datasets and would not provide the necessary functionality for recording changes in real-time.

Option B, Point-in-Time Recovery, is not necessary for this scenario as we only need to record new changes and not recover from a specific point in time.

Option D, DynamoDB Streams, can be used to capture new changes but it requires more setup and maintenance compared to Option C.

Option C, Amazon EventBridge (Amazon CloudWatch Events) rule, is the most ideal way to comply with the requirements. It allows for real-time tracking of table-level events in DynamoDB and can trigger a Lambda function to process and save new changes to the other table. This approach provides the necessary functionality while being simple to set up and maintain.