A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 

C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:

Option A is not suitable because DynamoDB Accelerator only speeds up data retrieval, it doesn't capture historical data or provide point-in-time recovery.

Option B is also not ideal since Point-in-Time Recovery is not designed for tracking changes in real-time; it's more suited for disaster recovery.

Option D would work but requires more setup and maintenance, as well as increased storage costs compared to Option C.

Option C provides the most straightforward solution to track changes in real-time and save them to another table while minimizing additional resources required.

Therefore, creating an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB is the most ideal way to comply with the requirements.