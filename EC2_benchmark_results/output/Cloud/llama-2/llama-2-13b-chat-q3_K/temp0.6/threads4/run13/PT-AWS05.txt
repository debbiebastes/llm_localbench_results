A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:

Option A is not ideal because DynamoDB Accelerator only speeds up data retrieval, but does not track changes or provide a mechanism for storing changes.

Option B is not ideal because Point-in-Time Recovery is a feature that allows you to restore a database to a previous state, but it does not track changes automatically.

Option D is not ideal because DynamoDB Streams can be complex to set up and manage, and may require more resources than necessary for this use case.

Option C is the most ideal way to comply with the requirements because Amazon EventBridge (Amazon CloudWatch Events) provides a simple and efficient way to track changes in DynamoDB tables, and Lambda functions can be easily set up to process and save new changes to the other table.