A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:

To comply with the requirements, we need to automatically sync the two tables, and Option C is the most ideal way to do so. By creating an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB, we can set a Lambda function as a rule target to process and save new changes to the other table. This approach is more efficient than enabling DynamoDB Point-in-Time Recovery or setting up DynamoDB Accelerator, as it allows for real-time processing of updates and eliminates the need for manual intervention. Additionally, using EventBridge provides a centralized and scalable solution for monitoring and responding to events across multiple services in AWS.