A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:
Option C is the most ideal way to comply with the requirements because it allows for real-time processing of new changes to the items in DynamoDB, while also providing a centralized and scalable solution for tracking and storing the changes.

DynamoDB Accelerator (option A) would not be suitable for this use case as it is primarily designed for low-latency read operations and may not be able to handle high volumes of changes.

DynamoDB Point-in-Time Recovery (option B) would also not be suitable as it is primarily designed for disaster recovery and would not provide real-time tracking of changes.

EventBridge (option C) provides a centralized way to track events across multiple AWS services, including DynamoDB. By setting up an EventBridge rule that tracks table-level events in DynamoDB, any new changes to the items in the DynamoDB table can be captured and processed in real-time. The Lambda function set as the rule target can then save the new changes to the other DynamoDB table in another region. This provides a scalable and reliable solution for tracking and storing new changes.