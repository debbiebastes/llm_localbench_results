A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table."

Explanation:
Option C is the most ideal way to comply with the requirements because it allows for real-time tracking of new changes made to items in DynamoDB and automatically processes and saves those changes to another table. By using Amazon EventBridge (CloudWatch Events), the solution can be easily scaled and integrated with other AWS services. Additionally, this approach does not require manual intervention or maintenance, making it a more reliable and efficient solution compared to the other options.

Option A (Set up DynamoDB Accelerator) is not relevant in this scenario as it is only used for improving the performance of DynamoDB and not for compliance purposes.

Option B (Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables) may not be the most ideal solution because it requires manual intervention to set up and maintain, and it may also introduce additional complexity and costs.

Option D (Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table) is also not the most ideal solution because it requires more infrastructure setup and maintenance compared to Option C, and it may also introduce additional latency and complexity.