A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 

Correct answer is C. Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:

Option A, Setting up DynamoDB Accelerator, is not relevant to complying with the requirements of recording and storing new changes in another DynamoDB table in another region.

Option B, Enabling DynamoDB Point-in-Time Recovery, would allow for restoring the table to a specific point in time, but it would not automatically sync the two tables.

Option D, Enabling DynamoDB Streams, would provide real-time data processing and streaming capabilities, but it may not be the most efficient way to comply with the requirements as it would require additional configuration and maintenance.

Option C, Creating an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB, is the most ideal way to comply with the requirements as it allows for real-time processing of new changes without requiring additional infrastructure such as DynamoDB Streams. Additionally, using a Lambda function as a rule target to process and save new changes to the other table provides the necessary flexibility and scalability to handle large volumes of data.