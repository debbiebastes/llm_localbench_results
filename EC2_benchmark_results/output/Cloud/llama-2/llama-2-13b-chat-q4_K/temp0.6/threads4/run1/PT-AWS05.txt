A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 

C. Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB, set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:

Option C is the most ideal way to comply with the requirements because it allows for real-time processing of new changes made to items in DynamoDB and automatically saves them to another table located in another region. This approach leverages Amazon EventBridge (formerly known as CloudWatch Events) to track table-level events in DynamoDB and a Lambda function as a rule target to process and save the new changes. This method is scalable, cost-effective, and doesn't require any additional infrastructure setup.

Option A, DynamoDB Accelerator, is not relevant for this use case, as it only provides faster read performance and doesn't support real-time replication of data.

Option B, Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables, would require manual intervention to trigger the synchronization process, which is not ideal for real-time compliance requirements. Additionally, this approach may lead to increased storage costs and complexity due to maintaining multiple versions of the data.

Option D, Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table, is also a viable option but requires more setup and maintenance compared to Option C. It would also require additional infrastructure such as an Amazon Kinesis stream, which can add complexity to the architecture.