A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:
Option C is the most ideal way to comply with the requirements because it allows for real-time processing of new changes made to the items in DynamoDB, without the need for manual intervention or periodic synchronization. By using Amazon EventBridge (formerly known as Amazon CloudWatch Events), you can create a rule that triggers whenever there are changes to the items in DynamoDB, and then set a Lambda function as a target to process and save those changes to the other table. This approach provides a scalable and automated solution for recording and storing new changes, while also ensuring that all changes are processed in real-time.

Option A, setting up DynamoDB Accelerator, is not relevant in this scenario as it only provides performance optimization for existing data, but it does not help with real-time processing of new changes.

Option B, enabling DynamoDB Point-in-Time Recovery, would require manual intervention to restore the database to a previous point in time, and would not provide real-time processing of new changes.

Option D, enabling DynamoDB Streams, would also require manual intervention to set up and maintain the streams, and would not provide a scalable and automated solution for recording and storing new changes.