A tech company has a CRM application hosted on an Auto Scaling group of On-Demand EC2 instances with different instance types and sizes. The application is extensively used during office hours from 9 in the morning to 5 in the afternoon. Their users are complaining that the performance of the application is slow during the start of the day but then works normally after a couple of hours.

Which of the following is the MOST operationally efficient solution to implement to ensure the application works properly at the beginning of the day?

(A) Configure a Predictive scaling policy for the Auto Scaling group to automatically adjust the number of Amazon EC2 instances
(B) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the Memory utilization.
(C) Configure a Scheduled scaling policy for the Auto Scaling group to launch new instances before the start of the day.
(D) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the CPU utilization.

Answer: 
B) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the Memory utilization.

Rationale: Since the application is memory-intensive, it's more likely that the slow performance during the start of the day is due to insufficient memory resources. Configuring a dynamic scaling policy based on memory utilization would allow the Auto Scaling group to launch new instances with more memory resources when needed, ensuring that the application has enough resources to handle the increased workload at the beginning of the day. This approach is more operationally efficient than configuring a predictive scaling policy (A) or scheduled scaling policy (C), as it reacts to changes in resource utilization in real-time, rather than relying on forecasts or schedules. Additionally, launching new instances based on CPU utilization (D) may not be as effective since CPU utilization may not be the limiting factor during the start of the day.