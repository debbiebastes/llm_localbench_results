A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table."

Explanation:
The most ideal way to comply with the requirements is option C, creating an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. This will allow you to capture all changes made to the items in DynamoDB and send them to a Lambda function for processing and saving to the other table.

Option A, setting up DynamoDB Accelerator, is not relevant in this scenario as it only improves data retrieval performance and does not provide any functionality for recording changes.

Option B, enabling DynamoDB Point-in-Time Recovery, would allow you to restore the database to a specific point in time, but it would not capture new changes made after that point in time.

Option D, enabling DynamoDB Streams, would allow you to stream changes from DynamoDB in real-time, but it would require additional setup and management compared to using Amazon EventBridge.