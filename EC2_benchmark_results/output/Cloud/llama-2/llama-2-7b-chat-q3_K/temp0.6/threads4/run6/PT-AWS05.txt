A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
The most ideal way to comply with the requirements is option (C): Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
Here's why:
EventBridge provides a fully managed event monitoring service for AWS services, allowing you to subscribe to events generated by those services. In this scenario, you can create an EventBridge rule that listens for events on the DynamoDB table in question and triggers a Lambda function whenever new changes are detected. The Lambda function can then process those changes and save them to the other DynamoDB table in another region.
By using EventBridge and Lambda, you don't need to worry about setting up or managing any additional infrastructure, such as DynamoDB Accelerator or Point-in-Time Recovery. You can also easily scale your solution by adding more resources to your Lambda function as needed.