A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
The most ideal way to comply with the requirements is option (C): Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
Here's why:
EventBridge is a fully managed service that allows you to subscribe to various AWS services, including DynamoDB, for event notifications. By creating an EventBridge rule that tracks table-level events in DynamoDB, you can automatically capture any new changes made to the items in the original DynamoDB table and save them to another DynamoDB table in another region.
Option (A), DynamoDB Accelerator, is not relevant to this scenario as it's a service that helps improve the performance of DynamoDB tables by accelerating data access and reducing latency for read-heavy workloads.
Option (B), Enable DynamoDB Point-in-Time Recovery, does not provide the necessary functionality to capture new changes made to items in DynamoDB as it only provides point-in-time recovery of DynamoDB tables.
Option (D), Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table, is also not ideal as it requires manual configuration and processing of events by the Lambda function, which may not be scalable or efficient in the long run.