A tech company has a CRM application hosted on an Auto Scaling group of On-Demand EC2 instances with different instance types and sizes. The application is extensively used during office hours from 9 in the morning to 5 in the afternoon. Their users are complaining that the performance of the application is slow during the start of the day but then works normally after a couple of hours.

Which of the following is the MOST operationally efficient solution to implement to ensure the application works properly at the beginning of the day?

(A) Configure a Predictive scaling policy for the Auto Scaling group to automatically adjust the number of Amazon EC2 instances
(B) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the Memory utilization.
(C) Configure a Scheduled scaling policy for the Auto Scaling group to launch new instances before the start of the day.
(D) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the CPU utilization.

Answer: 
The correct answer is (C) Configure a Scheduled scaling policy for the Auto Scaling group to launch new instances before the start of the day.

Explanation:
As the users are complaining about slow performance during the start of the day, it suggests that there may be an increase in demand for resources at that time. Implementing a Scheduled scaling policy would allow you to automatically launch new instances before office hours begin, ensuring that the application has sufficient resources to meet the increased demand without any delays or slowdowns.
Option (A) Predictive scaling is not the best solution here as it relies on historical data to predict future usage and may not take into account any unforeseen changes in usage patterns. Option (B) Dynamic scaling based on Memory utilization may also not be effective as memory usage alone may not accurately reflect the demand for instances during peak hours. Option (D) Dynamic scaling based on CPU utilization is also not a good solution as it would require constant monitoring of CPU usage and adjusting instance sizes accordingly, which can be complex to implement and maintain.