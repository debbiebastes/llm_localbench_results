A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
The most ideal way to comply with the requirements in this scenario is option (C): Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
EventBridge allows you to set up event monitoring and automation for various AWS services, including DynamoDB. By creating a rule that monitors table-level events (e.g., item creation, update, or deletion) in one region's DynamoDB table, EventBridge will automatically trigger a Lambda function as a target action to process and save the new changes to another table in another region. This approach ensures that all changes are recorded and stored in both tables, meeting the IT compliance requirements.
The other options do not address this requirement directly:
Option (A) DynamoDB Accelerator is an Amazon service that can improve read performance for DynamoDB tables. However, it does not provide event monitoring or automation capabilities.
Option (B) Enabling Point-in-Time Recovery (PITR) in DynamoDB does not automatically sync data between tables. PITR only enables you to restore a database table to a specific point in time in the event of a failure or data loss.
Option (D) Using DynamoDB Streams can help you track changes to items in a DynamoDB table, but it does not provide an easy way to save new changes to another table in another region. Additionally, DynamoDB Streams requires manual configuration and processing of the stream events using a Lambda function or other AWS service.