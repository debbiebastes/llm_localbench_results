A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
The most ideal way to comply with the requirements would be option (C): Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
Here's why:

Using EventBridge, you can set up a rule that listens for events on a specific DynamoDB table and triggers a Lambda function whenever there are changes made to that table. The Lambda function can then process and save those changes to another DynamoDB table in another region. This approach ensures that all changes are captured and recorded, which meets the compliance requirements.
Option (A) sets up a separate DynamoDB accelerator for each DynamoDB table, which may not be necessary or cost-effective. Option (B) enables point-in-time recovery, but it doesn't automatically sync changes to another table in another region. Option (D) configures DynamoDB Streams, but it requires manual processing and saving of new changes, which may not be feasible in a large-scale application.