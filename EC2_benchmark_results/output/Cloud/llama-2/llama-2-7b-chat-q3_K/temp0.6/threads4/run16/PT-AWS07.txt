A tech company has a CRM application hosted on an Auto Scaling group of On-Demand EC2 instances with different instance types and sizes. The application is extensively used during office hours from 9 in the morning to 5 in the afternoon. Their users are complaining that the performance of the application is slow during the start of the day but then works normally after a couple of hours.

Which of the following is the MOST operationally efficient solution to implement to ensure the application works properly at the beginning of the day?

(A) Configure a Predictive scaling policy for the Auto Scaling group to automatically adjust the number of Amazon EC2 instances
(B) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the Memory utilization.
(C) Configure a Scheduled scaling policy for the Auto Scaling group to launch new instances before the start of the day.
(D) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the CPU utilization.

Answer: 
The MOST operationally efficient solution is option (C): Configure a Scheduled scaling policy for the Auto Scaling group to launch new instances before the start of the day.

Explanation:

During peak hours, the application experiences slow performance due to high CPU and memory utilization on the existing instances. To address this issue, you can configure a scheduled scaling policy to automatically launch new instances before office hours begin. This will increase the number of instances available during peak hours, ensuring that the application has enough resources to handle the increased workload without experiencing slow performance.
Option (A) is not the best solution as predictive scaling policies rely on historical data to forecast future usage, which may not accurately reflect the current workload. Option (B) is also not ideal as dynamic scaling policies launch instances based on memory utilization, which may not address the issue of high CPU utilization during peak hours. Option (D) is also not relevant as it deals with CPU utilization rather than the overall performance of the application.