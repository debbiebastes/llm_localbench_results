A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
The most ideal way to comply with the requirements is option (C): Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
EventBridge allows you to track specific events in your AWS services, such as table-level events in DynamoDB. By setting up an event rule in EventBridge, you can trigger a Lambda function whenever there are changes made to the items in DynamoDB. The Lambda function can then process and save these new changes to another DynamoDB table in another region.
Option (A) is not ideal because it requires you to set up and manage an additional service (DynamoDB Accelerator) just to store the records of the new changes. Option (B) is also not ideal because it involves enabling Point-in-Time Recovery, which can be complex and may not be necessary in this scenario. Option (D) is also not ideal because it involves setting up DynamoDB Streams, which can also be complex to set up and manage.