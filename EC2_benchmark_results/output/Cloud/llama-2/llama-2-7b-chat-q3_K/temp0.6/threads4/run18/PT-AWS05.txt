A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

This is the most ideal way to comply with the requirements because it does not require any additional infrastructure or configuration on the existing DynamoDB table, other than setting up an EventBridge rule to track events in the table. The rule can trigger a Lambda function as a target, which will process and save new changes to another DynamoDB table located in another region.

Option (A) Set up DynamoDB Accelerator is not relevant to this scenario as it deals with improving performance for read-heavy workloads, whereas the requirement is to track changes made to a specific table.
Option (B) Enable DynamoDB Point-in-Time Recovery does not provide a solution for tracking changes made to a specific table. While it can automatically sync the two tables, it does not provide a way to record and store new changes made to the original table in another table.
Option (D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table is similar to option (C), but it requires additional configuration on the DynamoDB stream, which may not be feasible or practical depending on the specific requirements of the application.