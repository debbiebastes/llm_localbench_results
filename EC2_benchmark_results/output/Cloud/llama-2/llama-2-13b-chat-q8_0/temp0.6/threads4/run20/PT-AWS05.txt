A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:
EventBridge is a fully managed event bus service that provides a centralized way to collect, process, and act upon events from various sources within an AWS environment. In this scenario, creating an EventBridge rule that tracks table-level events in DynamoDB allows for real-time processing of new changes made to items in the primary DynamoDB table. The Lambda function set as a rule target can then process and save the new changes to the other DynamoDB table in another region, ensuring compliance with the company's IT requirements.

Option A, setting up DynamoDB Accelerator, is not relevant to this scenario as it only improves the performance of DynamoDB for certain workloads and does not provide a way to record changes made to items. Option D, enabling DynamoDB Streams, would also not be the most ideal solution as it would require additional setup and configuration to process the stream in real-time and save the new changes to the other table.