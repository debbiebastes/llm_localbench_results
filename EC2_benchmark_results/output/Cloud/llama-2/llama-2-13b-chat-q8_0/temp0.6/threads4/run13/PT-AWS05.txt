A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:
Option C is the most ideal way to comply with the requirements because it allows for real-time processing of new changes made to items in DynamoDB and automatically saves them to another table in another region. With Amazon EventBridge (formerly CloudWatch Events), you can create a rule that triggers when specific events occur in DynamoDB, such as when an item is inserted, updated, or deleted. The Lambda function set as the rule target can then process and save the new changes to the other table. This approach does not require any additional infrastructure setup, such as DynamoDB Accelerator or Point-in-Time Recovery, and does not incur any additional costs beyond what is already being paid for the existing DynamoDB tables.