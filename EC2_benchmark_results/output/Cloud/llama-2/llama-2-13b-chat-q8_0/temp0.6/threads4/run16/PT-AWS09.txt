A cryptocurrency trading platform is using an API built in AWS Lambda and API Gateway. Due to the recent news and rumors about the upcoming price surge of Bitcoin, Ethereum and other cryptocurrencies, it is expected that the trading platform would have a significant increase in site visitors and new users in the coming days ahead.

In this scenario, how can you protect the backend systems of the platform from traffic spikes?

(A) Switch from using AWS Lambda and API Gateway to a more scalable and highly available architecture using EC2 instances, ELB, and Auto Scaling.
(B) Enable throttling limits and result caching in API Gateway.
(C) Use CloudFront in front of the API Gateway to act as a cache.
(D) Move the Lambda function in a VPC.

Answer: 

(B) Enable throttling limits and result caching in API Gateway.

Explanation:

When dealing with unexpected traffic spikes, it's essential to ensure that your backend systems can handle the increased load without downtime or performance issues. In this scenario, enabling throttling limits and result caching in API Gateway can help protect the backend systems of the platform from traffic spikes.

Throttling limits can be set up in API Gateway to limit the number of requests that can be made to the backend within a certain time frame. This can help prevent overloading the backend systems and ensure that they can handle the increased traffic.

Result caching can also be enabled in API Gateway, which allows frequently accessed data to be stored in memory for quick retrieval. This can reduce the number of requests made to the backend and help alleviate the load on the system.

Using EC2 instances, ELB, and Auto Scaling (Option A) would also provide a more scalable and highly available architecture, but it may not address the immediate need of protecting the backend systems from traffic spikes. Moving the Lambda function in a VPC (Option D) may provide some benefits, but it is not directly related to protecting the backend systems from traffic spikes.

Using CloudFront in front of API Gateway (Option C) could potentially help cache frequently accessed data, but it would not address the issue of throttling limits and result caching in API Gateway, which are more relevant to this scenario.