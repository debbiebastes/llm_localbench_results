A tech company has a CRM application hosted on an Auto Scaling group of On-Demand EC2 instances with different instance types and sizes. The application is extensively used during office hours from 9 in the morning to 5 in the afternoon. Their users are complaining that the performance of the application is slow during the start of the day but then works normally after a couple of hours.

Which of the following is the MOST operationally efficient solution to implement to ensure the application works properly at the beginning of the day?

(A) Configure a Predictive scaling policy for the Auto Scaling group to automatically adjust the number of Amazon EC2 instances
(B) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the Memory utilization.
(C) Configure a Scheduled scaling policy for the Auto Scaling group to launch new instances before the start of the day.
(D) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the CPU utilization.

Answer: 
(B) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the Memory utilization.

Explanation:

As the application is extensively used during office hours, it's most likely that memory utilization will increase at the start of the day. By configuring a dynamic scaling policy based on memory utilization, new instances can be launched before the start of the day to ensure that there are enough resources available to handle the increased demand. This approach is more operationally efficient than predictive scaling, as it reacts to current usage patterns rather than trying to anticipate future usage.

Scheduled scaling would not address the issue, as it would only launch new instances at a predetermined time, regardless of the current usage patterns. Configuring a dynamic scaling policy based on CPU utilization may also not be effective, as CPU utilization may not increase significantly at the start of the day.