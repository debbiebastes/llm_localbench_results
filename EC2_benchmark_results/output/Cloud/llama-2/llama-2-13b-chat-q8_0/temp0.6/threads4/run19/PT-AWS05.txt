A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Rationale:
Option C is the most ideal way to comply with the requirements because it allows for real-time tracking of changes made to items in DynamoDB without having to enable Point-in-Time Recovery or set up DynamoDB Accelerator. EventBridge can capture events from DynamoDB and trigger a Lambda function to process and save new changes to the other table, ensuring that all changes are recorded and stored in another region.

Option A is not necessary for this use case, as there is no need to set up a separate accelerator for DynamoDB. Option B would require enabling Point-in-Time Recovery, which may not be feasible for this scenario, especially if the tables are very large or have many items. Option D would require setting up and configuring DynamoDB Streams, which can be complex and may not be necessary for this use case.