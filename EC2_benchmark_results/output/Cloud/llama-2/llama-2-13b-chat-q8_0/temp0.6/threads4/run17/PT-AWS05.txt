A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:
Option C is the most ideal way to comply with the requirements because it allows for real-time replication of changes from one DynamoDB table to another without the need for manual intervention or custom coding. By creating an Amazon EventBridge rule that tracks table-level events in DynamoDB, any new changes made to items in the source table will trigger a Lambda function to process and save those changes to the target table. This approach is scalable, secure, and easy to set up and manage.

Option A (DynamoDB Accelerator) is not relevant to this scenario as it only provides performance optimization for large-scale applications. Option B (Enable DynamoDB Point-in-Time Recovery) would require manual intervention to initiate the sync process, which goes against the requirement of real-time replication. Option D (Enable DynamoDB Streams) would also require custom coding and ongoing maintenance to handle the streaming data, which is not necessary in this scenario.