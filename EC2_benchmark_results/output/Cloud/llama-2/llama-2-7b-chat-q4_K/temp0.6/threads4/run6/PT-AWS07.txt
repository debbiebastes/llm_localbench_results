A tech company has a CRM application hosted on an Auto Scaling group of On-Demand EC2 instances with different instance types and sizes. The application is extensively used during office hours from 9 in the morning to 5 in the afternoon. Their users are complaining that the performance of the application is slow during the start of the day but then works normally after a couple of hours.

Which of the following is the MOST operationally efficient solution to implement to ensure the application works properly at the beginning of the day?

(A) Configure a Predictive scaling policy for the Auto Scaling group to automatically adjust the number of Amazon EC2 instances
(B) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the Memory utilization.
(C) Configure a Scheduled scaling policy for the Auto Scaling group to launch new instances before the start of the day.
(D) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the CPU utilization.

Answer: 
The MOST operationally efficient solution to implement to ensure the application works properly at the beginning of the day is (C): Configuring a Scheduled scaling policy for the Auto Scaling group to launch new instances before the start of the day.
Explanation:
Scheduled scaling allows you to pre-provision instances ahead of time, so they are available when needed. This ensures that the application has sufficient resources from the start of the day, eliminating any slow performance during the morning rush hour.
Configuring a Predictive scaling policy (A) may not be effective in this scenario as it relies on predicting future resource usage based on historical data. However, if the traffic is highly variable, this approach may not work well, and the application may experience slow performance during peak hours.
Dynamic scaling policies (B and D) do not provide a guaranteed solution for morning performance issues either. Dynamic scaling adjusts instance sizes based on current resource utilization, which means that new instances might not be launched in time to handle the increased demand at the start of the day.
In summary, configuring a Scheduled scaling policy is the most operationally efficient solution to ensure the application works properly during peak hours.