A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
The MOST ideal way to comply with the requirements in this scenario is option (C): Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
Here's why:
Option (A), DynamoDB Accelerator, is a feature that provides improved performance for certain types of workloads, but it does not provide the necessary recording and storage of new changes made to items in DynamoDB.
Option (B), DynamoDB Point-in-Time Recovery, is a feature that allows you to recover data from a point in time, but it does not provide the necessary recording and storage of new changes made to items in DynamoDB.
Option (D), DynamoDB Streams, is a feature that captures all writes and reads to an item, including any operations that are made to the item's attributes, but it also requires additional configuration and setup.
By creating an Amazon EventBridge rule, you can easily track table-level events in DynamoDB and trigger a Lambda function as a rule target to process and save new changes to the other table. This approach is more straightforward and easier to set up than the other options, and it provides a more comprehensive solution for recording and storing new changes made to items in DynamoDB.