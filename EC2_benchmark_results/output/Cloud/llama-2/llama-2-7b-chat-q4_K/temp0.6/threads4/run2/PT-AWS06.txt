A developer configured an Amazon API Gateway proxy integration named MyAPI to work with a Lambda function. However, when the API is being called, the developer receives a 502 Bad Gateway error. She tried invoking the underlying function, but it properly returned the result in XML format.

What is the MOST likely root cause of this issue?

(A) There is an incompatible output returned from a Lambda proxy integration backend.
(B) The endpoint request timed-out.
(C) There has been an occasional out-of-order invocation due to heavy loads.
(D) The API name of the Amazon API Gateway proxy is invalid.

Answer: 

The MOST likely root cause of this issue is: (B) The endpoint request timed-out.

When a Lambda function is invoked through an Amazon API Gateway proxy integration, the request is proxied to the underlying Lambda function. However, if the Lambda function takes too long to execute, the proxy integration times out and returns a 502 Bad Gateway error. In this case, option (B) is the best answer.

Option (A) is incorrect because there is no incompatible output returned from a Lambda proxy integration backend. The output of the Lambda function is determined by the function's implementation, and it can be any data type, including XML.
Option (C) is also incorrect because heavy loads do not cause occasional out-of-order invocations. If there are too many requests to handle, Amazon API Gateway can scale automatically to accommodate them, reducing the likelihood of out-of-order invocations.
Option (D) is incorrect because the API name in Amazon API Gateway is not the cause of a 502 Bad Gateway error.