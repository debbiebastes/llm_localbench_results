A cryptocurrency trading platform is using an API built in AWS Lambda and API Gateway. Due to the recent news and rumors about the upcoming price surge of Bitcoin, Ethereum and other cryptocurrencies, it is expected that the trading platform would have a significant increase in site visitors and new users in the coming days ahead.

In this scenario, how can you protect the backend systems of the platform from traffic spikes?

(A) Switch from using AWS Lambda and API Gateway to a more scalable and highly available architecture using EC2 instances, ELB, and Auto Scaling.
(B) Enable throttling limits and result caching in API Gateway.
(C) Use CloudFront in front of the API Gateway to act as a cache.
(D) Move the Lambda function in a VPC.

Answer: 

The correct answer is (B): Enable throttling limits and result caching in API Gateway.

Explanation:

AWS API Gateway provides built-in features to handle traffic spikes, including throttling limits and result caching. By enabling these features, you can prevent the backend systems from being overwhelmed with too many requests, and improve the performance of your trading platform by reducing the number of requests that need to be processed.
Throttling limits allow you to set a maximum number of requests that can be made within a certain time period, helping to prevent the backend systems from being flooded with requests. Result caching allows you to cache the results of API calls, so that subsequent requests for the same result can be served from the cache instead of re-processing the request.
AWS Lambda and API Gateway are designed to be highly scalable and resilient, but in extreme cases of traffic spikes, additional measures are needed to protect the backend systems. Enabling throttling limits and result caching in API Gateway is a simple and effective way to handle traffic spikes without overwhelming the backend systems.
Switching to EC2 instances, ELB, and Auto Scaling (option A) can provide additional scalability, but may not be necessary in this scenario. Using CloudFront in front of the API Gateway (option C) can help improve performance by caching frequently requested content, but it will not address traffic spikes directly. Moving the Lambda function to a VPC (option D) is not relevant to handling traffic spikes.
Therefore, option B is the best answer.