A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
The MOST ideal way to comply with the requirements is (C): Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
Explanation:
DynamoDB Accelerator is not ideal for this use case as it is designed to improve read performance only, and does not provide any data replication or backup features.
DynamoDB Point-in-Time Recovery (PITR) can be used to restore data from a point in time, but it is not intended for real-time data replication. It requires manual intervention to enable and configure, and it may not provide the level of granularity needed for compliance requirements.
DynamoDB Streams provides real-time data streaming and can be used for data replication, but it requires additional configuration and maintenance to set up and manage.
By using an Amazon EventBridge rule with a Lambda function as a target, you can automatically capture and process new changes made to DynamoDB tables in near real-time. This approach provides a more flexible and scalable solution for compliance requirements compared to the other options listed.