A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
The MOST ideal way to comply with the requirements would be option (C): Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB, and set a Lambda function as a rule target to process and save new changes to the other table.
This approach has several advantages:
1. Low latency: Using EventBridge to track DynamoDB events means that changes are captured almost immediately after they occur, which minimizes the time it takes for the Lambda function to receive and process the updates.
2. No application downtime: Since the Lambda function is triggered by an event from DynamoDB, there is no need to modify the existing application or introduce additional latency by polling for changes. This ensures that the new table remains updated without any disruptions to the original application.
3. Scalability: EventBridge can handle a large volume of events, making it easy to scale the solution as the data grows.
4. Cost-effective: Using EventBridge and Lambda reduces the need for additional infrastructure or software licensing costs, making it a cost-effective solution compared to other options.