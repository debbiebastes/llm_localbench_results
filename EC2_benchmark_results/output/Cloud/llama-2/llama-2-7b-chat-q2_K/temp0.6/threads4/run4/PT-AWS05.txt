A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
The most ideal way to comply with the requirements would be option (C): Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
Explanation:
Option (C) is the most ideal because it allows you to track all changes made to the original DynamoDB table and automatically save them to the other table in another region. This ensures that the new changes are recorded and stored in a separate table, which is compliant with the IT requirements.
Using Amazon EventBridge, you can set up a rule that monitors all events in the original DynamoDB table, such as creation, update, or delete operations. Whenever an event occurs, the rule will trigger a Lambda function as a target to process and save the new changes to the other table. This ensures that the changes are not lost or overwritten during the syncing process.
Additionally, using EventBridge and Lambda functions allows you to centralize the change data processing, which can help improve performance and reduce costs compared to manually processing changes in multiple tables.