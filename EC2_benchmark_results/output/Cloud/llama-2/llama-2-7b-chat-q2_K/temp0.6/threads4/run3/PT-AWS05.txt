A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
The most ideal way to comply with the requirements is option (C). Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
EventBridge provides a flexible and scalable way to collect, process, and act on events from multiple sources, including DynamoDB. By setting up an EventBridge rule to track changes made to a DynamoDB table in one region, you can automatically capture those changes and forward them to another table in another region. This ensures that changes are properly recorded and stored in the new table, while also maintaining data consistency across both tables.
Option (A) sets up DynamoDB Accelerator, which is not relevant to the problem stated. Option (B) enables Point-in-Time Recovery, which is not a viable solution for real-time data tracking and processing. Option (D) enables DynamoDB Streams, which can be used for real-time streaming of changes, but may require additional configuration and setup.