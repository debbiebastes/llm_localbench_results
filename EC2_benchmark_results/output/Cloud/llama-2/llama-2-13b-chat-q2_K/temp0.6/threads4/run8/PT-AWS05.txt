A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 

C. Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:

* Option A, DynamoDB Accelerator, is not relevant in this scenario as it only improves read performance for DynamoDB tables.
* Option B, Point-in-Time Recovery, is not necessary here since we only need to record new changes, not revert to a previous state.
* Option D, DynamoDB Streams, would also be an option, but EventBridge provides a more straightforward way to track table-level events and trigger the Lambda function.

By using Amazon EventBridge and setting a Lambda function as a rule target, we can efficiently record new changes in the DynamoDB table without requiring additional infrastructure or maintenance.