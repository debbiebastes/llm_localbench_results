A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:

Option A is not ideal because it requires setting up a separate DynamoDB Accelerator instance, which may not be necessary in this scenario. Option B is also not ideal because it would require manually enabling Point-in-Time Recovery for each table, which could be error-prone and time-consuming.

Option C is the most ideal way to comply with the requirements because it allows for real-time processing of new changes without requiring manual intervention. By creating an Amazon EventBridge rule that tracks table-level events in DynamoDB, any new changes made to the items in the first table will trigger a Lambda function to process and save the changes to the second table. This approach also allows for scalability and flexibility, as it can handle large volumes of data without requiring manual intervention.