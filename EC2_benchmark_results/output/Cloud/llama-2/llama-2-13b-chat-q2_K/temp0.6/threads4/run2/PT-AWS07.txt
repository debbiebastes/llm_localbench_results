A tech company has a CRM application hosted on an Auto Scaling group of On-Demand EC2 instances with different instance types and sizes. The application is extensively used during office hours from 9 in the morning to 5 in the afternoon. Their users are complaining that the performance of the application is slow during the start of the day but then works normally after a couple of hours.

Which of the following is the MOST operationally efficient solution to implement to ensure the application works properly at the beginning of the day?

(A) Configure a Predictive scaling policy for the Auto Scaling group to automatically adjust the number of Amazon EC2 instances
(B) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the Memory utilization.
(C) Configure a Scheduled scaling policy for the Auto Scaling group to launch new instances before the start of the day.
(D) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the CPU utilization.

Answer: 

(A) Configure a Predictive scaling policy for the Auto Scaling group to automatically adjust the number of Amazon EC2 instances.

Explanation: The most operationally efficient solution would be to configure a predictive scaling policy, which can analyze historical usage patterns and forecast future demand to automatically adjust the number of instances based on the expected workload. This approach helps ensure that there are enough resources available at the beginning of the day when the application is in high demand, but not overprovisioning during low-demand periods.

In this scenario, option A is the best choice because it allows for dynamic scaling based on historical usage patterns and forecasted demand, ensuring that the application performs optimally at the start of the day. Options B, C, and D do not address the specific needs of the scenario and may not be as effective in ensuring optimal performance during peak usage periods.