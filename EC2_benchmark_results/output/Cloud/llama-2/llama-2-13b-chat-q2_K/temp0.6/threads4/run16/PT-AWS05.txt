A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 

C. Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:

Option A, DynamoDB Accelerator, is not relevant for this scenario as it only improves performance for read-heavy workloads.

Option B, Enable DynamoDB Point-in-Time Recovery, would allow for restoring the DynamoDB table to a specific point in time, but it would not ensure that new changes are recorded and stored in another table.

Option D, Enable DynamoDB Streams, would provide real-time updates of changes made to the DynamoDB table, but it would require additional processing and storage costs.

Option C, Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB, is the most ideal way to comply with the requirements as it allows for real-time tracking of changes made to the DynamoDB table without incurring additional storage costs. By setting a Lambda function as a rule target, new changes can be processed and saved to the other table in real-time.