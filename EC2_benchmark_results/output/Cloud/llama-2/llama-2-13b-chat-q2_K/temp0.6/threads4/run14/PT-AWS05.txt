A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 

C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:

Option C is the most ideal way to comply with the requirements because it allows for real-time processing of new changes made to items in DynamoDB, without requiring a separate data transfer process. By using Amazon EventBridge (formerly known as CloudWatch Events), you can set up a rule that triggers when there are changes to the items in DynamoDB, and then run a Lambda function to process and save those changes to the other table. This approach ensures that all new changes are recorded and stored in the other table without any delay.

Option A, DynamoDB Accelerator, is not necessary for this use case as it only improves the performance of read operations and doesn't help with recording new changes. Option D, Enable DynamoDB Streams, would also work but requires more setup and maintenance compared to Option C.