A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:

Option A, DynamoDB Accelerator, is not relevant in this scenario as it's only used for caching and does not provide real-time data replication.

Option B, Point-in-Time Recovery, is not ideal since it would require manual intervention to initiate the recovery process and it may not be able to capture all changes made to the table.

Option D, DynamoDB Streams, would require more resources and infrastructure to set up and manage. Additionally, it may not provide real-time updates of new changes made to the table.

Option C, Amazon EventBridge (Amazon CloudWatch Events), provides a scalable and efficient solution for tracking table-level events in DynamoDB. By configuring a Lambda function as a rule target, new changes can be processed and saved to the other table in real-time without manual intervention or additional infrastructure setup.

Therefore, option C is the most ideal way to comply with the requirements.