A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:
While all of the options provided can potentially fulfill the requirements, the most ideal solution would be to use Amazon EventBridge (Amazon CloudWatch Events) along with a Lambda function. This is because EventBridge allows for real-time monitoring and response to events across AWS services, including DynamoDB. By setting up an event rule that tracks changes made to items in the main table, and configuring a Lambda function as the target for those events, any new changes will be automatically processed and saved to the other table in another region without any manual intervention or additional configuration required. Additionally, this solution provides greater flexibility and scalability compared to the other options, as it allows for the ability to track and process changes made to multiple tables or resources within a single rule.