A tech company has a CRM application hosted on an Auto Scaling group of On-Demand EC2 instances with different instance types and sizes. The application is extensively used during office hours from 9 in the morning to 5 in the afternoon. Their users are complaining that the performance of the application is slow during the start of the day but then works normally after a couple of hours.

Which of the following is the MOST operationally efficient solution to implement to ensure the application works properly at the beginning of the day?

(A) Configure a Predictive scaling policy for the Auto Scaling group to automatically adjust the number of Amazon EC2 instances
(B) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the Memory utilization.
(C) Configure a Scheduled scaling policy for the Auto Scaling group to launch new instances before the start of the day.
(D) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the CPU utilization.

Answer: 

The MOST operationally efficient solution is (C) Configure a Scheduled scaling policy for the Auto Scaling group to launch new instances before the start of the day.

This is because, when the application starts at 9 in the morning, there might be a sudden spike in traffic and demand which can lead to increased load on the existing instances. With a scheduled scaling policy, new instances can be launched proactively before the start of the day to handle the expected traffic surge, ensuring that the application works properly from the beginning.

Scheduled scaling policies allow you to configure Auto Scaling groups to launch or terminate instances at specific times or intervals, based on your business needs. By using this feature, you can ensure that your application has the required resources at all times and is optimized for performance and cost-effectiveness.