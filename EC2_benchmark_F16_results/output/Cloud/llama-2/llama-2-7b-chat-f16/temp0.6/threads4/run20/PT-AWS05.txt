A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
The most ideal way to comply with the requirements is option (C): Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB, set a Lambda function as a rule target to process and save new changes to the other table.
Explanation:
Option (C) allows for the capture of all changes made to the main DynamoDB table and sends those changes to another DynamoDB table in another region. This approach provides a centralized, automated way to handle the recording and storage of new changes, which meets the requirements specified in the scenario.
Option (A) is not ideal because it requires additional infrastructure and cost to set up and manage an Accelerator for DynamoDB.
Option (B) is not ideal because it relies on Point-in-Time Recovery (PITR), which is a time-consuming process that can have performance implications, especially if the main table is large. PITR also requires manual intervention to initiate the process, which may not align with the compliance requirements of the company.
Option (D) is not ideal because it requires setting up DynamoDB Streams, which can be complex and time-consuming to configure, especially if the application has a large number of tables or items. Additionally, Streams do not provide a centralized way to process and save new changes, as they are event-based and may require additional infrastructure and configuration to handle.
In summary, option (C) provides the most straightforward and efficient solution by leveraging Amazon EventBridge and Lambda to automate the recording and storage of new changes in another DynamoDB table in another region, meeting the requirements specified in the scenario.