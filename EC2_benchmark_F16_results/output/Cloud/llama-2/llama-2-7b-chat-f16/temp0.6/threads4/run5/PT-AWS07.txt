A tech company has a CRM application hosted on an Auto Scaling group of On-Demand EC2 instances with different instance types and sizes. The application is extensively used during office hours from 9 in the morning to 5 in the afternoon. Their users are complaining that the performance of the application is slow during the start of the day but then works normally after a couple of hours.

Which of the following is the MOST operationally efficient solution to implement to ensure the application works properly at the beginning of the day?

(A) Configure a Predictive scaling policy for the Auto Scaling group to automatically adjust the number of Amazon EC2 instances
(B) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the Memory utilization.
(C) Configure a Scheduled scaling policy for the Auto Scaling group to launch new instances before the start of the day.
(D) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the CPU utilization.

Answer: 
The MOST operationally efficient solution to implement would be (C): Configure a Scheduled scaling policy for the Auto Scaling group to launch new instances before the start of the day. This approach allows for proactive management of resource capacity and can help ensure that the application has sufficient resources available at the beginning of the day when users are most likely to access it.

Explanation:
Option (C) provides a proactive solution by scheduling the launch of new instances before the start of the day. This allows for the resources to be provisioned and available in advance, reducing the likelihood of slow performance during peak usage hours. In contrast, options (A), (B), and (D) rely on reactive scaling policies that respond to changes in resource utilization after they have occurred.
Option (A) uses Predictive scaling, which can provide a head start in forecasting future capacity needs but may not be able to accurately predict the exact capacity requirements at the beginning of the day. Option (B) uses Dynamic scaling based on Memory utilization, which can help scale resources up or down based on current usage but may not account for changes in usage patterns over time. Option (D) uses Dynamic scaling based on CPU utilization, which can also help scale resources up or down based on current usage but may not be able to anticipate changes in resource requirements before they occur.
In summary, option (C) provides a proactive solution by scheduling the launch of new instances before the start of the day, ensuring that resources are available when needed and reducing the likelihood of slow performance during peak usage hours.