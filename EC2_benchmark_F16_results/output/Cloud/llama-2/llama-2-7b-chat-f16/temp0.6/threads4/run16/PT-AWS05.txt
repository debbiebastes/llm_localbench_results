A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 

The best answer is (C): Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:
This option is the most ideal because it doesn't require any additional infrastructure, like DynamoDB Accelerator or Point-in-Time Recovery, which can be expensive and complex to set up.
Using Amazon EventBridge (CloudWatch Events) allows you to configure a rule that tracks table-level events in DynamoDB. Whenever there's an update to a table, the event will be triggered, and the Lambda function will be executed as a target. The Lambda function can then process the new changes and save them to the other DynamoDB table in another region.
Option (D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table is also a valid option, but it might not be the best choice because DynamoDB Streams only provide real-time data streams for items that are being updated or deleted, whereas Amazon EventBridge can track any table-level events. Additionally, using Lambda functions as targets for DynamoDB Streams can result in higher costs compared to using CloudWatch Events and Lambda together.