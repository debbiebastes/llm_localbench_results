A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
The most ideal way to comply with the requirements is option (C): Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
Explanation:
Option (C) creates a systematic and automated way to track changes made to items in DynamoDB. By setting up an Amazon EventBridge rule, any changes made to items in the primary DynamoDB table will trigger an event that can be processed by a Lambda function. This Lambda function can then save the new changes to a second DynamoDB table in another region.
Option (A) sets up DynamoDB Accelerator, which is not required for this use case as it is primarily focused on improving query performance.
Option (B) enables DynamoDB Point-in-Time Recovery, which can help recover data in the event of a disaster but does not directly address the requirement of tracking changes made to items in DynamoDB.
Option (D) enables DynamoDB Streams, which provides real-time updates on changes made to items in DynamoDB. However, it requires additional configuration and maintenance to set up a Lambda function to process and save new changes to the other table, which may be more complex than using an Amazon EventBridge rule.
Therefore, option (C) is the most ideal way to comply with the requirements as it provides a simple, automated, and scalable solution for tracking and processing changes made to items in DynamoDB.