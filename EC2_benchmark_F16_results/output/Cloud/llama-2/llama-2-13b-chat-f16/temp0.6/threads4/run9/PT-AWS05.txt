A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:
Option C is the most ideal way to comply with the requirements because it provides a scalable, reliable, and cost-effective solution. Here's why:

1. EventBridge: Amazon EventBridge (formerly known as CloudWatch Events) is a fully managed event bus that allows you to subscribe to events from various AWS services, including DynamoDB. By creating an EventBridge rule, you can automatically receive real-time updates when new items are inserted or updated in the original DynamoDB table.
2. Lambda function: You can set a Lambda function as a target for the EventBridge rule. Whenever a new item is added or updated in the original table, the EventBridge rule will trigger the Lambda function to process and save the changes to the other table. This ensures that all new changes are recorded and stored in the second table.
3. Scalability: With EventBridge and Lambda, you can scale your solution as needed to handle increasing traffic or data volume. You only pay for the resources you use, making this approach cost-effective.
4. Reliability: EventBridge and Lambda provide reliable and fault-tolerant event processing, ensuring that your application remains available even in case of failures or outages.

In contrast, options A, B, and D have their own limitations and drawbacks:

A) DynamoDB Accelerator: This feature is primarily designed to improve the performance of read-heavy workloads, not for recording changes. Additionally, it requires manual configuration and can add complexity to your setup.

B) Point-in-Time Recovery (PITR): While PITR can be useful for recovering from data loss or corruption, it is not designed for real-time data synchronization. Moreover, enabling PITR can increase your storage costs and require more administrative effort.

D) DynamoDB Streams: DynamoDB Streams can provide real-time updates, but they require additional configuration and can incur additional costs. Moreover, processing streams with Lambda can be less efficient than using EventBridge and a