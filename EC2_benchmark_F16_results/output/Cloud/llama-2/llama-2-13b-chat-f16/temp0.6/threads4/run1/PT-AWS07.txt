A tech company has a CRM application hosted on an Auto Scaling group of On-Demand EC2 instances with different instance types and sizes. The application is extensively used during office hours from 9 in the morning to 5 in the afternoon. Their users are complaining that the performance of the application is slow during the start of the day but then works normally after a couple of hours.

Which of the following is the MOST operationally efficient solution to implement to ensure the application works properly at the beginning of the day?

(A) Configure a Predictive scaling policy for the Auto Scaling group to automatically adjust the number of Amazon EC2 instances
(B) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the Memory utilization.
(C) Configure a Scheduled scaling policy for the Auto Scaling group to launch new instances before the start of the day.
(D) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on the CPU utilization.

Answer: 
(B) Configure a Dynamic scaling policy for the Auto Scaling group to launch new instances based on Memory utilization.

Explanation: 
The issue described in the question is typical of an application that experiences a sudden surge in usage at the start of the day, resulting in performance degradation due to insufficient resources. In this scenario, using CPU utilization as the scaling metric might not be effective as it may take some time for the system to reach its peak usage.

Memory utilization, on the other hand, is a more appropriate scaling metric in this case since it can detect when the application is under heavy load and needs more resources quickly. By configuring a Dynamic scaling policy based on Memory utilization, the Auto Scaling group will launch new instances as needed to handle the increased demand during the start of the day. This approach will help ensure that the application performs optimally at the beginning of the day when usage is high.

Option (A) is not operationally efficient because it would require the system to continuously monitor and adjust the number of instances based on predicted usage, which might not be effective in this scenario where the usage spikes suddenly. Option (C) is also not a good choice since scheduling new instances before the start of the day will not address the issue of sudden spikes in usage during the morning hours. Option (D) is not relevant to the given problem statement.