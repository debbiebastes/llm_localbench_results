A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:
Option C is the most ideal way to comply with the requirements because it allows for real-time tracking of changes made to items in DynamoDB, without requiring manual intervention or synchronization. By using Amazon EventBridge (formerly known as CloudWatch Events), you can create a rule that triggers whenever there are changes to the items in DynamoDB, and then sets a Lambda function as a target to process and save the new changes to the other table. This approach allows for automatic synchronization of changes between the two tables, without the need for manual intervention or complex data pipelines.

Option A (Setting up DynamoDB Accelerator) is not relevant to this scenario, as it only provides improved performance for queries and scans on DynamoDB tables, but does not address the requirement for recording changes.

Option B (Enable DynamoDB Point-in-Time Recovery) would allow for restoring the table to a previous state in case of failures or data loss, but would not provide real-time synchronization of changes between tables.

Option D (Enable DynamoDB Streams) would allow for real-time processing of changes made to items in DynamoDB, but would require manual intervention to save the changes to another table.