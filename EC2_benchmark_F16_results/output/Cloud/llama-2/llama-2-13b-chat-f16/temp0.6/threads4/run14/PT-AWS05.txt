A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.

In this scenario, which of the following is the MOST ideal way to comply with the requirements?

(A) Set up DynamoDB Accelerator
(B) Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.
(C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.
(D) Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.

Answer: 
C) Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.

Explanation:

Option A is not relevant to this scenario, as DynamoDB Accelerator is used for caching, not for replication or synchronization.

Option B is also not relevant, as Point-in-Time Recovery is used to restore the entire table to a previous state, not to sync changes between tables.

Option D is possible, but it requires more setup and configuration compared to Option C. Using EventBridge allows for more fine-grained control over which events are captured and processed by the Lambda function. Additionally, EventBridge integrates well with other AWS services, making it a good choice for this use case.